plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.sonarqube' version '6.0.1.5171'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

group = 'org.container.terraman.api'

configurations {
    all {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

repositories {
    mavenCentral()
}

ext {
    springIoPlatformVersion = 'Cairo-SR8'
    apacheHttpClientVersion = '4.5.12'
    gsonVersion = '2.8.9'
    lombokVersion = '1.18.36'
    jacocoVersion = '0.8.8'
    jjwtVersion = '0.9.1'
    jsonpathVersion = '2.9.0'
    springCloudVersion = '2024.0.0'
    mariaDbVersion = '3.0.4'
}

dependencies {
    compileOnly 'com.google.code.findbugs:annotations:3.0.1'
    compileOnly 'com.google.code.findbugs:jsr305:3.0.1'
    implementation 'junit:junit:4.13.1'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-aop"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation("org.apache.httpcomponents.client5:httpclient5")
    implementation "com.google.code.gson:gson:${gsonVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "io.jsonwebtoken:jjwt:${jjwtVersion}"
    implementation "com.jayway.jsonpath:json-path:${jsonpathVersion}"
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.17.0'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.5'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'
    implementation 'commons-io:commons-io:2.14.0'
    testImplementation('org.mockito:mockito-inline:3.4.0')
    implementation files('libs/jsch-0.2.7.jar')
    testImplementation(platform("org.junit:junit-bom:5.9.1"))
    testImplementation("org.junit.jupiter:junit-jupiter")
    runtimeOnly 'com.squareup.okio:okio-jvm:3.4.0'
    implementation group: 'org.json', name: 'json', version: '20231013'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.16.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'
    implementation 'net.minidev:json-smart:2.5.2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco.xml"
    }
}

jacoco {
    toolVersion = "${jacocoVersion}"
}

test {
    ignoreFailures = true
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacoco-overall.exec")
    }
    finalizedBy("jacocoTestReport")
}

jacocoTestReport {
    reports {
        xml.required.set(true)
        html.required.set(true)
        xml.destination file("build/reports/jacoco.xml")
        html.destination file("build/reports/jacoco.html")
    }
}