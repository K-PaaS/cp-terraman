buildscript {
    ext {
        springBootVersion = '2.7.3'
        springBootManagementPlugin = '1.0.11.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:${springBootManagementPlugin}"
    }
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
group = 'org.paasta.container.terraman.api'
sourceCompatibility = '1.8'
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
}
ext {
    apacheHttpClientVersion = '4.5.12'
    gsonVersion = '2.8.6'
    lombokVersion = '1.18.12'
    jacocoVersion = '0.8.5'
    swaggerVersion = '2.9.2'
    jjwtVersion = '0.9.1'
    jsonpathVersion = '2.4.0'
    springCloudVersion = '2021.0.3'
    jschVersion = '0.1.55'
    mariaDbVersion = '3.0.4'
}
jar {
    enabled = false
    archivesBaseName = 'paas-ta-container-terraman-api'
}
dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-aop"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation "org.apache.httpcomponents:httpclient:${apacheHttpClientVersion}"
    implementation "com.google.code.gson:gson:${gsonVersion}"
    implementation 'junit:junit:4.13.1'
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.mariadb.jdbc:mariadb-java-client:${mariaDbVersion}"
    implementation "io.jsonwebtoken:jjwt:${jjwtVersion}"
    implementation("io.springfox:springfox-swagger2:${swaggerVersion}") {
        exclude module: 'swagger-annotations'
        exclude module: 'swagger-models'
    }
    implementation("io.swagger:swagger-annotations:1.5.21")
    implementation("io.swagger:swagger-models:1.5.21")
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"
    implementation "com.jayway.jsonpath:json-path:${jsonpathVersion}"
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    implementation "com.jcraft:jsch:${jschVersion}"
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.2.9'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.9'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.32'
    implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.32'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.17.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.0'
    implementation group: 'org.springframework.vault', name: 'spring-vault-core', version: '2.2.3.RELEASE'
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
jacoco {
    toolVersion = "${jacocoVersion}"
    reportsDir = file("$buildDir/jacocoReport")
}
test {
    ignoreFailures = true
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacoco-overall.exec")
    }
    finalizedBy("jacocoTestReport")
}
jacocoTestReport {
    reports {
        xml.enabled true
    }
}
tasks.named("jar") {
    enabled = false
}